{"version":3,"sources":["assets/svg/arrow-down.svg","assets/svg/arrow-back.svg","assets/svg/look-pass.svg","assets/svg/close.svg","assets/svg/error.svg","assets/svg/check.svg","assets/svg/Magnifier.svg","components/Header/Header.js","redux/actions/authActions.js","redux/types.js","redux/actions/paginationActions.js","redux/actions/typeActions.js","redux/actions/subtypeActions.js","redux/actions/errorActions.js","tools/lookPass.js","components/Loader/Spinner/Spinner.js","components/Modals/ValidError/ValidError.js","components/Modals/ValidSuccess/ValidSuccess.js","components/Login/Login.js","redux/actions/successActions.js","pages/LoginPage.js","components/LoginVerification/LoginVerification.js","pages/LoginVerificationPage.js","components/Loader/Skeleton/CardSkeleton.js","components/Modals/ModalPokemon/ModalPokemon.js","components/Pokemons/Card.js","components/Pagination/Pagination.js","components/Missing/Missing.js","components/Pokemons/Pokemons.js","redux/actions/cardsActions.js","components/Filter/Option.js","components/Filter/Flter.js","pages/PokemonsPage.js","components/Pokemon/Attributes/Attack/Attack.js","components/Pokemon/Attributes/Resistances/Resistances.js","components/Loader/Skeleton/FullCardSkeleton.js","components/Pokemon/Pokemon.js","pages/PokemonPage.js","redux/reducers/authReducer.js","redux/reducers/uiReducer.js","redux/reducers/errorReducer.js","redux/reducers/successReducer.js","redux/reducers/typeReducer.js","redux/reducers/subtypeReducer.js","redux/reducers/cardsReducer.js","redux/reducers/paginationReducer.js","redux/store.js","components/Auth/AuthRoute.js","components/Errors/404.js","pages/HomePage.js","components/App/App.js","index.js"],"names":["module","exports","withRouter","history","useSelector","auth","authenticated","verified","dispatch","useDispatch","className","src","arrowBack","alt","to","onClick","goBack","type","logout","setError","message","setTimeout","payload","lookPass","event","buttonElement","currentTarget","inputElement","parentElement","querySelector","classList","add","setAttribute","remove","Spinner","ValidError","clear","errorMessage","useEffect","Fragment","errorSVG","closeSVG","ValidSuccess","successMessage","successSVG","useState","login","setLogin","password","setPassword","loading","ui","error","push","onSubmit","preventDefault","code","setSuccess","i","Math","floor","random","generateCode","entry","onChange","target","value","name","placeholder","required","minLength","data-for","data-delay-show","data-tip","look","disabled","clearError","LoginPage","props","setCode","success","verify","clearSuccess","LoginVerificationPage","CardSkeleton","ModalPokemon","image","close","ref","useRef","document","addEventListener","handleClick","removeEventListener","current","contains","Card","card","show","setShow","id","imageUrl","Magnifier","imageUrlHiRes","Pagination","numbers","pagination","total","pageSize","currentPage","ceil","map","number","key","page","Missing","Pokemons","cards","currentType","currentSubtype","subtype","data","types","config","params","axios","get","then","res","catch","err","console","log","list","length","Option","Filter","subtypes","getTypes","getSubtypes","typeOptions","subtypeOptions","arrow","PokemonsPage","Attack","attack","damage","cost","text","Resistances","resistance","FullCardSkeleton","Pokemon","_ID","match","attacks","resistances","evolvesFrom","PokemonPage","initialState","middleware","thunk","rootPersistConfig","storage","blacklist","reducers","combineReducers","state","action","persistedReducer","persistReducer","store","createStore","compose","applyMiddleware","persistor","persistStore","AuthRoute","Component","component","rest","render","Error_404","href","HomePage","App","path","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.65fa7137.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-down.404caa1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-back.254bfcc1.svg\";","module.exports = __webpack_public_path__ + \"static/media/look-pass.dd06ad64.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.b2f47841.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.6dc9730a.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.3876df7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Magnifier.c891f864.svg\";","import React, {Fragment} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../../redux/actions/authActions\";\nimport {withRouter} from 'react-router-dom'\nimport './style.scss'\nimport {Link} from \"react-router-dom\";\nimport arrowBack from '../../assets/svg/arrow-back.svg'\n\nconst Header = ({history}) => {\n\n    const {authenticated, verified} = useSelector(({auth: {authenticated, verified}}) => ({authenticated, verified}))\n    const dispatch = useDispatch()\n\n    return (\n        <Fragment>\n            {authenticated && verified ?\n                <div className='container-header'>\n                    <div className='header-left'>\n                        <img src={arrowBack} alt='arrow-back'/>\n                        <div className=\"link\">\n                            <Link to=\"#\" className=\"back p2\" onClick={() => history.goBack()}>назад</Link>\n                        </div>\n                    </div>\n                    <div className='header-right'>\n                        <div className=\"link\" >\n                            <Link to=\"/login\" className=\"exit p2\" onClick={() => logout()(dispatch)}>Выйти</Link>\n                        </div>\n                    </div>\n                </div> : null}\n        </Fragment>\n    )\n}\n\nexport default withRouter(Header)","import {LOADING_START, LOADING_STOP, LOGIN, LOGOUT, VERIFIED} from \"../types\";\nimport {clearTypes} from \"./typeActions\";\nimport {clearSubtypes} from \"./subtypeActions\";\nimport {clearPage} from \"./paginationActions\";\n\nexport const login = () => dispatch => {\n    dispatch({type: LOADING_START})\n    setTimeout(() => {\n        dispatch({type: LOGIN})\n        dispatch({type: LOADING_STOP})\n    }, 2000)\n}\n\nexport const logout = () => dispatch => {\n    dispatch({type: LOGOUT})\n    dispatch(clearPage())\n    dispatch(clearTypes())\n    dispatch(clearSubtypes())\n}\n\nexport const verify = () => dispatch => {\n    dispatch({type: LOADING_START})\n    setTimeout(() => {\n        dispatch({type: VERIFIED})\n        dispatch({type: LOADING_STOP})\n    }, 2000)\n}\n\n","// auth\nexport const LOGIN = 'LOGIN'\nexport const LOGOUT = 'LOGOUT'\nexport const VERIFIED = 'VERIFIED'\nexport const NOT_VERIFIED = 'NOT_VERIFIED'\n\n// ui\nexport const LOADING_START = 'LOADING_START'\nexport const LOADING_STOP = 'LOADING_STOP'\n\n// error\nexport const SET_ERROR = 'SET_ERROR'\nexport const CLEAR_ERROR = 'CLEAR_ERROR'\n\n// success\nexport const SET_SUCCESS = 'SET_SUCCESS'\nexport const CLEAR_SUCCESS = 'CLEAR_SUCCESS'\n\n// category\nexport const SET_TYPES = 'SET_TYPES'\nexport const SET_SUBTYPES = 'SET_SUBTYPES'\nexport const SET_CURRENT_TYPE = 'SET_CURRENT_TYPE'\nexport const SET_CURRENT_SUBTYPE = 'SET_CURRENT_SUBTYPE'\nexport const CLEAR_TYPES = 'CLEAR_TYPES';\nexport const CLEAR_SUBTYPES = 'CLEAR_SUBTYPES';\n\n// pokemons\nexport const SET_POKEMONS = 'SET_POKEMONS'\nexport const CLEAR_CARDS = 'CLEAR_CARDS'\nexport const SET_POKEMON = 'SET_POKEMON'\n\n// pagination\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nexport const CLEAR_PAGINATION = 'CLEAR_PAGINATION'","import {CLEAR_PAGINATION, SET_CURRENT_PAGE} from \"../types\";\n\nexport const setCurrentPage = (page) => dispatch => {\n    dispatch({type: SET_CURRENT_PAGE, payload: page})\n}\n\nexport const clearPage = () => dispatch => {\n    dispatch({type: CLEAR_PAGINATION})\n}","import axios from 'axios'\nimport {CLEAR_TYPES, SET_CURRENT_TYPE, SET_TYPES} from \"../types\";\n\nexport const getTypes = () => dispatch => {\n    axios.get('https://api.pokemontcg.io/v1/types')\n        .then(res => {\n            dispatch({type: SET_TYPES, payload: res.data.types})\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n\nexport const setCurrentType = (type) => dispatch => {\n    dispatch({type: SET_CURRENT_TYPE, payload: type})\n}\n\nexport const clearTypes = () => dispatch => {\n    dispatch({type: CLEAR_TYPES})\n}","import axios from \"axios\";\nimport {CLEAR_SUBTYPES, SET_CURRENT_SUBTYPE, SET_SUBTYPES} from \"../types\";\n\nexport const getSubtypes = () => dispatch => {\n    axios.get('https://api.pokemontcg.io/v1/subtypes')\n        .then(res => {\n            dispatch({type: SET_SUBTYPES, payload: res.data.subtypes})\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n\nexport const setCurrentSubtype = (subtype) => dispatch => {\n    dispatch({type: SET_CURRENT_SUBTYPE, payload: subtype})\n}\n\nexport const clearSubtypes = () => dispatch => {\n    dispatch({type: CLEAR_SUBTYPES})\n}\n","import {CLEAR_ERROR, LOADING_START, LOADING_STOP, SET_ERROR} from \"../types\";\n\nexport const setError = (message) => dispatch => {\n    dispatch({type: LOADING_START})\n    setTimeout(() => {\n        dispatch({type: SET_ERROR, payload: message})\n        dispatch({type: LOADING_STOP})\n    }, 2000)\n}\n\nexport const clearError = () => dispatch => {\n    dispatch({type: CLEAR_ERROR})\n}","export const lookPass = (event) => {\n    const buttonElement = event.currentTarget;\n    const divElement = buttonElement.parentElement;\n    const inputElement = divElement.querySelector(\"input\");\n\n    if(inputElement.type === \"password\") {\n        inputElement.type = \"text\";\n\n        buttonElement.classList.add('is-active');\n        buttonElement.setAttribute(\"data-tip\", \"Скрыть пароль\");\n    } else {\n        inputElement.type = \"password\";\n\n        buttonElement.classList.remove('is-active');\n        buttonElement.setAttribute(\"data-tip\", \"Показать пароль\");\n    }\n};\n\nexport const generateCode = () => {\n    let code = '';\n    for (let i = 0; i <= 6; i++) {\n        code += Math.floor(Math.random() * 10);\n    }\n    return code\n}","import React from 'react'\nimport './spinner.scss'\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-css\">\n            <div className=\"lds-double-ring\">\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Spinner","import React, {useEffect} from 'react';\nimport closeSVG from '../../../assets/svg/close.svg'\nimport errorSVG from '../../../assets/svg/error.svg'\nimport './style.scss'\n\nconst ValidError = ({clear, errorMessage}) => {\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (clear) clear()\n        }, 3000)\n    })\n\n    return (\n        <React.Fragment>\n            <div className=\"valid-errors-modal-wrapper\">\n                <div className=\"valid-errors-modal\">\n                    <div className=\"icon\">\n                        <img src={errorSVG} alt='error'/>\n                    </div>\n                    <span className=\"text-error\">{errorMessage}</span>\n                    <button onClick={() => {if (clear) clear()}}>\n                        <img src={closeSVG} alt='close'/>\n                    </button>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default ValidError\n","import React from 'react';\nimport successSVG from '../../../assets/svg/check.svg'\nimport './style.scss'\n\nconst ValidSuccess = ({successMessage}) => {\n\n    return (\n        <React.Fragment>\n            <div className=\"valid-success-modal-wrapper\">\n                <div className=\"valid-success-modal\">\n                    <div className=\"icon\">\n                        <img src={successSVG} alt='success'/>\n                    </div>\n                    <span className=\"text-error\">{successMessage}</span>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default ValidSuccess","import React, {useState, useEffect, Fragment} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {login as entry} from \"../../redux/actions/authActions\";\nimport {setError, clearError} from \"../../redux/actions/errorActions\";\nimport {setSuccess} from \"../../redux/actions/successActions\";\nimport './login.scss'\nimport look from '../../assets/svg/look-pass.svg'\nimport {generateCode, lookPass} from \"../../tools/lookPass\";\nimport Spinner from \"../Loader/Spinner/Spinner\";\nimport ValidError from \"../Modals/ValidError/ValidError\";\nimport ValidSuccess from \"../Modals/ValidSuccess/ValidSuccess\";\n\nconst Login = ({history}) => {\n\n    const _USER_LOGIN = 'kode@kode.ru';\n    const _USER_PASSWORD = 'Enk0deng';\n    const _ERROR_MESSAGE = 'Ваш логин или пароль не совпадают.'\n\n    const [login, setLogin] = useState('')\n    const [password, setPassword] = useState('')\n\n    const {authenticated, loading, error} = useSelector(\n        ({auth: {authenticated}, ui: {loading}, error: {error}}) =>\n            ({authenticated, loading, error})\n    )\n    const dispatch = useDispatch()\n\n    const handleLogin = (event) => {\n        event.preventDefault()\n        if (_USER_LOGIN === login && _USER_PASSWORD === password) {\n            setSuccess(generateCode())(dispatch)\n            entry()(dispatch)\n        } else {\n            setError(_ERROR_MESSAGE)(dispatch)\n        }\n    }\n\n    useEffect(() => {\n        if (authenticated) {\n            history.push('/login-verification')\n        }\n    })\n\n    return (\n        <Fragment>\n            <div className=\"login-page container-login\">\n                <h2>Вход в профиль</h2>\n                <div className=\"input-item\">\n                    <form onSubmit={handleLogin}>\n                        <div className=\"content-input\">\n                            <div className=\"input-wrapper\">\n                                <label className=\"headline\">Логин</label>\n                                <input className=\"login input-info\" onChange={(event) => {\n                                    setLogin(event.target.value)\n                                }}\n                                       value={login}\n                                       name=\"login\" placeholder=\"Введите логин\"\n                                       type=\"login\" required minLength={3}/>\n                            </div>\n                            <div className=\"input-wrapper\">\n                                <label className=\"headline\">Пароль</label>\n                                <input className=\"password input-info\" onChange={(event) => {\n                                    setPassword(event.target.value)\n                                }}\n                                       value={password}\n                                       name=\"password\" placeholder=\"Введите пароль\"\n                                       type=\"password\" required minLength={6}/>\n\n                                <button onClick={lookPass} type=\"button\" className=\"look-pass\"\n                                        data-for=\"look-pass\" data-delay-show=\"200\" data-tip=\"Показать пароль\">\n                                    <img src={look} alt='icon'/>\n                                </button>\n                            </div>\n                        </div>\n                        <button type=\"submit\" disabled={loading}>\n                            {loading ? <Spinner /> : 'Войти'}\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n            <ValidSuccess successMessage={`Данные для входа: Логин - ${_USER_LOGIN}, Пароль - ${_USER_PASSWORD}`} />\n            {error.message ? <ValidError clear={() => clearError()(dispatch)} errorMessage={error.message}/> : null}\n        </Fragment>\n    )\n}\n\nexport default withRouter(Login)","import {CLEAR_SUCCESS, SET_SUCCESS} from \"../types\";\n\nexport const setSuccess = (code) => dispatch => {\n    dispatch({type: SET_SUCCESS, payload: code})\n}\n\nexport const clearSuccess = () => dispatch => {\n    dispatch({type: CLEAR_SUCCESS})\n}","import React from \"react\";\nimport Login from \"../components/Login/Login\";\n\nconst LoginPage = (props) => {\n    return <Login {...props}/>\n}\n\nexport default LoginPage","import React, {Fragment, useState, useEffect} from \"react\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {clearSuccess} from \"../../redux/actions/successActions\";\nimport {verify, logout} from \"../../redux/actions/authActions\";\nimport {setError, clearError} from \"../../redux/actions/errorActions\";\nimport './style.scss'\nimport Spinner from \"../Loader/Spinner/Spinner\";\nimport ValidError from \"../Modals/ValidError/ValidError\";\nimport ValidSuccess from \"../Modals/ValidSuccess/ValidSuccess\";\n\nconst LoginVerification = ({history}) => {\n\n    const _ERROR_MESSAGE = 'Вы ввели не верный код.'\n    const _SUCCESS_MESSAGE = 'Ваш код - '\n    const [code, setCode] = useState('')\n\n    const {loading, authenticated, verified, success, error} = useSelector(\n        ({ui: {loading}, auth: {authenticated, verified}, success: {success}, error: {error}}) =>\n            ({loading, authenticated, verified, success, error})\n    )\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (authenticated && verified) {\n            history.push('/pokemons')\n        } else if (!authenticated) {\n            history.push('/login')\n        }\n    })\n\n    const handleVerify = (event) => {\n        event.preventDefault()\n        if (code === success.code) {\n            verify()(dispatch)\n            clearSuccess()(dispatch)\n        } else {\n            setError(_ERROR_MESSAGE)(dispatch)\n        }\n    }\n\n    return (\n        <Fragment>\n            <div className=\"login-verification-page container-login-verification\">\n                <h2>Подтвердите вход</h2>\n                <div className=\"input-item\">\n                    <form onSubmit={handleVerify}>\n                        <div className=\"content-input\">\n                            <div className=\"input-wrapper\">\n                                <label className=\"headline\">Код</label>\n                                <input className=\"code input-info\" onChange={(event) => setCode(event.target.value)}\n                                       value={code}\n                                       name=\"code\" placeholder=\"Введите код из смс\"\n                                       type=\"text\" required minLength={6}/>\n                            </div>\n                        </div>\n                        <button type=\"submit\" disabled={loading}>\n                            {loading ? <Spinner /> : 'Подтвердить'}\n                        </button>\n                    </form>\n                    <div className=\"link\" onClick={() => logout()(dispatch)}>\n                        <Link to=\"/login\" className=\"back p2\">Назад</Link>\n                    </div>\n                </div>\n            </div>\n\n            {success.code ? <ValidSuccess successMessage={_SUCCESS_MESSAGE + success.code} /> : null }\n            {error.message ? <ValidError clear={() => clearError()(dispatch)} errorMessage={_ERROR_MESSAGE} /> : null }\n        </Fragment>\n    )\n}\n\nexport default withRouter(LoginVerification)","import React from \"react\";\nimport LoginVerification from \"../components/LoginVerification/LoginVerification\";\n\nconst LoginVerificationPage = (props) => {\n    return <LoginVerification {...props}/>\n}\n\nexport default LoginVerificationPage","import React from \"react\";\nimport './style.scss'\n\nconst CardSkeleton = () => {\n\n    return (\n        <div className='card-skeleton'></div>\n    )\n}\n\nexport default CardSkeleton","import React, {useEffect, useRef} from \"react\";\n\nconst ModalPokemon = ({image, close}) => {\n\n    const ref = useRef(null)\n\n    useEffect(() => {\n        document.addEventListener('click', handleClick)\n        return () => {\n            document.removeEventListener('click', handleClick)\n        }\n    }, [])\n\n    const handleClick = (event) => {\n        if (!ref.current.contains(event.target)) {\n            close()\n        }\n    }\n\n    return (\n        <div className=\"fixed-overlay\">\n            <div className=\"modal\">\n                <div className=\"modal_container\">\n                    <img src={image} alt='card' ref={ref}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ModalPokemon","import React, {Fragment, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport CardSkeleton from \"../Loader/Skeleton/CardSkeleton\";\nimport Magnifier from '../../assets/svg/Magnifier.svg'\nimport {Link} from \"react-router-dom\";\nimport ModalPokemon from \"../Modals/ModalPokemon/ModalPokemon\";\n\nconst Card = ({card}) => {\n\n    const [show, setShow] = useState(false)\n    const {loading} = useSelector(({ui: {loading}}) => ({loading}))\n\n    return (\n        <Fragment>\n            {loading ?\n                <CardSkeleton /> :\n                <div className='card'>\n                    <Link to={`/pokemons/${card.id}`} >\n                        <img src={card.imageUrl} alt='Card'/>\n                    </Link>\n                    <div className='large' onClick={(event) => setShow(true)}>\n                        <img src={Magnifier} alt='Magnifier'/>\n                    </div>\n                </div>\n            }\n            {show ? <ModalPokemon image={card.imageUrlHiRes} close={() => setShow(false)}/> : null}\n        </Fragment>\n    )\n}\n\nexport default Card","import React from \"react\";\nimport {setCurrentPage} from \"../../redux/actions/paginationActions\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport './style.scss'\n\nconst Pagination = () => {\n\n    const numbers = []\n    const {total, pageSize, currentPage} = useSelector(\n        ({pagination: {total, pageSize, currentPage}}) =>\n            ({total, pageSize, currentPage})\n    )\n    const dispatch = useDispatch()\n\n    for (let i = 1; i <= Math.ceil(total / pageSize); i++) {\n        numbers.push(i)\n    }\n\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {numbers.map(number => (\n                    <li key={number}>\n                        <Link to='#' className={currentPage === number ? 'active': ''} onClick={() => setCurrentPage(number)(dispatch)}>\n                            {number}\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Pagination","import React from \"react\";\nimport './style.scss'\n\nconst Missing = () => {\n\n    return (\n        <div className=\"missing\">\n            <h3>Ой... ничего не найдено, попробуйте другие параметры</h3>\n        </div>\n    )\n}\n\nexport default Missing","import React, {useEffect} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {getCards} from \"../../redux/actions/cardsActions\";\nimport './style.scss'\nimport Card from \"./Card\";\nimport Pagination from \"../Pagination/Pagination\";\nimport Missing from \"../Missing/Missing\";\n\nconst Pokemons = () => {\n\n    const {cards, currentType, currentSubtype, currentPage, pageSize} = useSelector(\n        ({cards: {cards}, type: {currentType}, subtype: {currentSubtype}, pagination: {currentPage, pageSize}}) =>\n            ({cards, currentType, currentSubtype, currentPage, pageSize}))\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const param = {\n            types: currentType,\n            subtype: currentSubtype,\n            pageSize: pageSize,\n            page: currentPage\n        }\n        getCards(param)(dispatch)\n    }, [currentType, currentSubtype, currentPage])\n\n    const list = cards.map(card => <Card card={card} key={card.id}/>)\n\n    return (\n        <div className='container-pokemons'>\n            <div className='columns card-gallery'>\n                <div className='column'>\n                    {list.length === 0 ?\n                        <Missing/> :\n                        list}\n                </div>\n            </div>\n            <Pagination/>\n        </div>\n    )\n}\n\nexport default Pokemons","import axios from 'axios'\nimport {LOADING_START, LOADING_STOP, SET_POKEMON, SET_POKEMONS} from \"../types\";\n\nexport const getCards = (data) => dispatch => {\n\n    const config = {\n        params: {\n            ...data,\n            types: data.types === 'default' ? null : data.types,\n            subtype: data.subtype === 'default' ? null : data.subtype\n        }\n    }\n\n    dispatch({type: LOADING_START})\n    axios.get('https://api.pokemontcg.io/v1/cards', config)\n        .then(res => {\n            dispatch({type: SET_POKEMONS, payload: res.data.cards})\n            dispatch({type: LOADING_STOP})\n        })\n        .catch(err => {\n            console.log(err)\n            dispatch({type: LOADING_STOP})\n        })\n}\n\nexport const getCard = (id) => dispatch => {\n    dispatch({type: LOADING_START})\n    axios.get('https://api.pokemontcg.io/v1/cards/' + id)\n        .then(res => {\n            dispatch({type: LOADING_STOP})\n            dispatch({type: SET_POKEMON, payload: res.data.card})\n        })\n        .catch(err => {\n            console.log(err)\n            dispatch({type: LOADING_STOP})\n        })\n}","import React from \"react\";\n\nconst Option = ({value}) => {\n\n    return (\n        <option value={value}>{value}</option>\n    )\n}\n\nexport default Option","import React, {useEffect} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {getTypes, setCurrentType} from \"../../redux/actions/typeActions\";\nimport {getSubtypes, setCurrentSubtype} from \"../../redux/actions/subtypeActions\";\nimport './style.scss'\nimport arrow from '../../assets/svg/arrow-down.svg'\nimport Option from \"./Option\";\n\n\nconst Filter = () => {\n\n    const {types, subtypes, currentType, currentSubtype} = useSelector(\n        ({type: {types, currentType}, subtype: {subtypes, currentSubtype}}) =>\n            ({types, subtypes, currentType, currentSubtype}))\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        getTypes()(dispatch)\n        getSubtypes()(dispatch)\n    }, [])\n\n    const typeOptions = types.map(type => <Option value={type} key={type} />)\n    const subtypeOptions = subtypes.map(subtype => <Option value={subtype} key={subtype} />)\n\n    return (\n        <div className='container-filter'>\n            <h4>Выбор категорий</h4>\n            <div className=\"filter-content\">\n                <p>Types:</p>\n                <div className='filter-row'>\n                    <select onChange={(event) => setCurrentType(event.currentTarget.value)(dispatch)}\n                            value={currentType}>\n                        <option value=\"default\">None</option>\n                        {typeOptions}\n                    </select>\n                    <img src={arrow} alt='arrow'/>\n                </div>\n            </div>\n            <div className=\"filter-content\">\n                <p>Subtypes:</p>\n                <div className='filter-row'>\n                    <select onChange={(event) => setCurrentSubtype(event.currentTarget.value)(dispatch)}\n                            value={currentSubtype}>\n                        <option value=\"default\">None</option>\n                        {subtypeOptions}\n                    </select>\n                    <img src={arrow} alt='arrow'/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Filter","import React from \"react\";\nimport Pokemons from \"../components/Pokemons/Pokemons\";\nimport Filter from \"../components/Filter/Flter\";\n\nconst PokemonsPage = (props) => {\n    return (\n        <div className='pokemons-page container-content'>\n            <Filter />\n            <Pokemons />\n        </div>\n    )\n}\n\nexport default PokemonsPage","import React from \"react\";\nimport './style.scss'\n\nconst Attack = ({attack}) => {\n\n    return (\n        <div className='pokemon-attribute'>\n            <div className='attribute-item'>\n                {attack.name ?\n                    <div className='item'>\n                        Attack:\n                        <span className='name'>{attack.name}</span>\n                    </div> : null}\n                {attack.damage ?\n                    <div className='item'>\n                        Damage:\n                        <span className='damage'>{attack.damage}</span>\n                    </div> : null}\n                {attack.cost ?\n                    <div className='item'>\n                        Cost:\n                        <span className='cost'>{attack.cost.length}</span>\n                    </div> : null}\n            </div>\n            <div className='attribute-text'>\n                <p className='p2'>{attack.text}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Attack","import React from \"react\";\n\nconst Resistances = ({resistance}) => {\n\n    return (\n        <div className='attribute-item'>\n            {resistance.type ?\n                <div className='item'>\n                    Type:\n                    <span className='name'>{resistance.type}</span>\n                </div> : null}\n            {resistance.value ?\n                <div className='item'>\n                    Value:\n                    <span className='name'>{resistance.value}</span>\n                </div> : null}\n        </div>\n    )\n}\n\nexport default Resistances","import React from \"react\";\n\nconst FullCardSkeleton = () => {\n\n    return (\n        <div className='full-card-skeleton'>\n            <div className='card-image'></div>\n            <div className='card-content'></div>\n        </div>\n    )\n}\n\nexport default FullCardSkeleton","import React, {useEffect, Fragment} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {getCard} from \"../../redux/actions/cardsActions\";\nimport './style.scss'\nimport Attack from \"./Attributes/Attack/Attack\";\nimport Resistances from \"./Attributes/Resistances/Resistances\";\nimport FullCardSkeleton from \"../Loader/Skeleton/FullCardSkeleton\";\n\nconst Pokemon = (props) => {\n\n    const _ID = props.match.params.id;\n\n    const {card, loading} = useSelector(\n        ({cards: {card}, ui: {loading}}) =>\n            ({card, loading})\n    )\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        getCard(_ID)(dispatch)\n    }, [_ID])\n\n    const types = card.types ? card.types.map(type =>\n        <div className=\"pokemon-attribute\" key={type}>\n            Type:\n            <span>{type}</span>\n        </div>) : null\n\n    const attacks = card.attacks ? card.attacks.map(attack => <Attack attack={attack} key={attack.name}/>) : null\n    const resistances = card.resistances ? card.resistances.map(res => <Resistances resistance={res} key={res.type}/>) :\n        <span>N/A</span>\n\n    return (\n        <div className='container-content pokemon-page'>\n            {loading ? <FullCardSkeleton/> :\n                <Fragment>\n                    <div className='column-one'>\n                        <img src={card.imageUrlHiRes} alt='pokemon'/>\n                    </div>\n                    <div className='column-two'>\n                        <div className=\"pokemon-attribute\">\n                            Pokemon name:\n                            <span>{card.name}</span>\n                        </div>\n                        {types}\n                        <div className=\"pokemon-attribute\">\n                            Subtype:\n                            <span>{card.subtype}</span>\n                        </div>\n                        <div className=\"pokemon-attribute line\"></div>\n                        {attacks}\n                        <div className=\"pokemon-attribute\">\n                            Evolves form:\n                            <span>{card.evolvesFrom || 'N/A'}</span>\n                        </div>\n                        <div className=\"pokemon-attribute\">\n                            Resistances:\n                            {resistances}\n                        </div>\n                    </div>\n                </Fragment>\n            }\n        </div>\n    )\n}\n\nexport default Pokemon","import React from \"react\";\nimport Pokemon from \"../components/Pokemon/Pokemon\";\n\nconst PokemonPage = (props) => {\n    return <Pokemon {...props}/>\n}\n\nexport default PokemonPage","import {LOGIN, LOGOUT, NOT_VERIFIED, VERIFIED} from \"../types\";\n\nconst initialState = {\n    authenticated: false,\n    verified: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOGIN:\n            return {\n                ...state,\n                authenticated: true\n            }\n        case LOGOUT:\n            return {\n                authenticated: false\n            }\n        case VERIFIED:\n            return {\n                ...state,\n                verified: true\n            }\n        case NOT_VERIFIED:\n            return {\n                ...state,\n                verified: false\n            }\n        default:\n            return state\n    }\n}","import {LOADING_START, LOADING_STOP} from \"../types\";\n\nconst initialState = {\n    loading: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOADING_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case LOADING_STOP:\n            return {\n                ...state,\n                loading: false\n            }\n        default:\n            return state\n    }\n}","import {CLEAR_ERROR, SET_ERROR} from \"../types\";\n\nconst initialState = {\n    error: {\n        message: null\n    }\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_ERROR:\n            return {\n                ...state,\n                error: {\n                    ...state.error,\n                    message: action.payload\n                }\n            }\n        case CLEAR_ERROR:\n            return initialState\n        default:\n            return state\n    }\n}","import {CLEAR_SUCCESS, SET_SUCCESS} from \"../types\";\n\nconst initialState = {\n    success: {\n        code: null\n    }\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SUCCESS:\n            return {\n                ...state,\n                success: {\n                    ...state.success,\n                    code: action.payload\n                }\n            }\n        case CLEAR_SUCCESS:\n            return initialState\n        default:\n            return state\n    }\n}","import {CLEAR_TYPES, SET_CURRENT_TYPE, SET_TYPES} from \"../types\";\n\nconst initialState = {\n    types: [],\n    currentType: ''\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_TYPES:\n            return {\n                ...state,\n                types: action.payload\n            }\n        case SET_CURRENT_TYPE:\n            return {\n                ...state,\n                currentType: action.payload\n            }\n        case CLEAR_TYPES:\n            return initialState\n        default:\n            return state\n    }\n}","import {CLEAR_SUBTYPES, SET_CURRENT_SUBTYPE, SET_SUBTYPES} from \"../types\";\n\n\nconst initialState = {\n    subtypes: [],\n    currentSubtype: ''\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SUBTYPES:\n            return {\n                ...state,\n                subtypes: action.payload\n            }\n        case SET_CURRENT_SUBTYPE:\n            return {\n                ...state,\n                currentSubtype: action.payload\n            }\n        case CLEAR_SUBTYPES:\n            return initialState\n        default:\n            return state\n    }\n}","import {CLEAR_CARDS, SET_POKEMON, SET_POKEMONS} from \"../types\";\n\nconst initialState = {\n    cards: [],\n    card: {}\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_POKEMONS:\n            return {\n                ...state,\n                cards: action.payload\n            }\n        case SET_POKEMON:\n            return {\n                ...state,\n                card: action.payload\n            }\n        case CLEAR_CARDS:\n            return initialState\n        default:\n            return state\n    }\n}","import {CLEAR_PAGINATION, SET_CURRENT_PAGE} from \"../types\";\n\nconst initialState = {\n    pageSize: 9,\n    currentPage: 1,\n    total: 100\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.payload\n            }\n        case CLEAR_PAGINATION:\n            return initialState\n        default:\n            return state\n    }\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\n\nimport thunk from 'redux-thunk'\n\nimport {persistReducer, persistStore} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport authReducer from \"./reducers/authReducer\";\nimport uiReducer from \"./reducers/uiReducer\";\nimport errorReducer from \"./reducers/errorReducer\";\nimport successReducer from \"./reducers/successReducer\";\nimport typeReducer from \"./reducers/typeReducer\";\nimport subtypeReducer from \"./reducers/subtypeReducer\";\nimport cardsReducer from \"./reducers/cardsReducer\";\nimport paginationReducer from \"./reducers/paginationReducer\";\n\nconst middleware = [thunk];\n\nconst rootPersistConfig = {\n    key: 'root',\n    storage: storage,\n    blacklist: ['ui', 'cards']\n};\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    error: errorReducer,\n    success: successReducer,\n    type: typeReducer,\n    subtype: subtypeReducer,\n    cards: cardsReducer,\n    pagination: paginationReducer\n});\nconst persistedReducer = persistReducer(rootPersistConfig, reducers);\n\nconst store = createStore(\n    persistedReducer,\n    compose(\n        applyMiddleware(...middleware),\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\nconst persistor = persistStore(store);\n\nexport {store, persistor}","import React from \"react\";\nimport {Redirect, Route} from 'react-router-dom'\nimport {useSelector} from \"react-redux\";\n\nconst AuthRoute = ({component: Component, ...rest}) => {\n\n    const {authenticated, verified} = useSelector(({auth: {authenticated, verified}}) => ({authenticated, verified}))\n\n    return <Route {...rest}\n        render={(props) => authenticated === true && verified === true ? <Component {...props} /> : <Redirect to='/login' />}/>\n}\n\nexport default AuthRoute","import React from \"react\";\nimport './style.scss'\n\nconst Error_404 = () => {\n\n    return (\n        <div className=\"error-404\">\n            <div className=\"content\">\n                <h3>Ошибка 404 - здесь пусто</h3>\n                <p>Этой страницы не существует или она была удалена. Но у нас есть другие.</p>\n                <a href=\"/pokemons\">К покемонам</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Error_404","import React from \"react\";\nimport {Redirect} from 'react-router-dom'\n\nconst HomePage = () => {\n    return <Redirect to='/login'/>\n}\n\nexport default HomePage","import React from 'react';\nimport './app.scss'\n\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport Header from \"../Header/Header\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport LoginVerificationPage from \"../../pages/LoginVerificationPage\";\nimport PokemonsPage from \"../../pages/PokemonsPage\";\nimport PokemonPage from \"../../pages/PokemonPage\";\n\nimport {store, persistor} from \"../../redux/store\";\nimport {Provider} from 'react-redux'\nimport {PersistGate} from 'redux-persist/integration/react'\nimport AuthRoute from \"../Auth/AuthRoute\";\nimport Error_404 from \"../Errors/404\";\nimport HomePage from \"../../pages/HomePage\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <BrowserRouter>\n                    <header>\n                        <Header/>\n                    </header>\n                    <div className='container'>\n                        <Switch>\n                            <Route path='/' component={HomePage} exact/>\n                            <Route path='/login' component={LoginPage} exact/>\n                            <Route path='/login-verification' component={LoginVerificationPage} exact/>\n                            <AuthRoute path='/pokemons' component={PokemonsPage} exact/>\n                            <AuthRoute path='/pokemons/:id' component={PokemonPage} exact/>\n                            <Route component={Error_404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </PersistGate>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/></React.StrictMode>,\n    document.getElementById('root'));\n\n"],"sourceRoot":""}